<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

    <!-- bean definitions here --> 
    <!-- 여기에 선언한 클래스들은 스프링워크가 딱 한번만 생성해서 필요한곳에 넣어준다. 필요하다고 선언하는게 바로 Autowired -->
    <!-- 자바 코드로 만들면 이런 코드 -->
    <!-- HikariConfig hikariConfig = new HikariConfig(); 생성자 호출 -->
    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <!-- hikariConfig.setDriverClassName("...") 메서드 호출 -->
        <property name="driverClassName" value="oracle.jdbc.OracleDriver" />
        <property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:xe" />
        <property name="username" value="scott" />
        <property name="password" value="tiger" />
    </bean>
   
    <!-- 자바 코드로 만들면 이런 코드 -->
    <!-- HikariDataSource dataSource = new HikariDataSource(hikariConfig);-->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"> <!-- 여기만 쓰면 기본생성자만 호출 -->
        <constructor-arg ref="hikariConfig" /> <!-- ref: 참조변수 (아규먼트를 넘겨주려면 변수가 필요하니까) -->
    </bean>
    
    <!-- SqlSessionFactoryBean 객체:
        Data Source(Connection Pool)을 이용해서 SQL문장들을 실행하고 결과 처리를 수행하는 객체.
     -->
     
     <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> <!-- id는 변수이름 클래스는 라이브러리가 있었던 패키치 이름 -->
        <property name="dataSource" ref="dataSource" /> <!-- name - 클래스가 가지고 있는 프로퍼티의 이름(멤버변수의 이름) / ref 레퍼런스 - 생성된 객체를 의미함. -->
        <property name="mapperLocations" value="classpath:/mappers/**/*.xml" /> <!-- value는 그냥 문자열을 전달함. ref는 아이디를 찾아가서 그 아이디에 해당하는 객체를 아이디에 저장함. ref와 value의 차이점. -->
        <!-- classpath: src/main/java, src/main/resources 같은 사용할수 있는 파일들을 의미함.-->
     </bean>
     
     <!-- MyBatis 프레임워크에서 생성하고 관리하는 bean들을 base-package와 그 하위 패키지에서 검색함. -->   
     <mybatis:scan base-package="com.itwill.spring2.repository"/>
     
     <!-- Service 애너테이션이 설정된 객체들을 spring container가 생성하고 관리. -->
     <context:component-scan base-package="com.itwill.spring2.service" />
        
</beans>